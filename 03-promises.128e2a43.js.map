{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAASC,SAASC,cAAc,SAEtC,IAAIC,EAAQ,EACRC,EAAY,EACZC,EAAS,EA2Bb,SAASC,EAAcC,EAAUC,GAC/BD,GAAY,EACZE,QAAQC,IAAIH,EAAUI,OAAOH,IAEb,IAAII,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,CAAEM,SAAAZ,EAAUa,MAAAZ,IAEpBM,EAAO,CAAEK,SAAAZ,EAAUa,MAAAZ,MAEpBA,MAIFa,MAAK,EAACF,SAAEA,EAAUC,MAAAE,MACjBxB,EAAAyB,OAAOC,QAAQ,qBAAqBL,QAAeG,MAAW,CAC5DG,SAAU,SAEZhB,QAAQC,IAAI,uBAAqBS,QAAiBG,UAEnDI,OAAM,EAACP,SAAEA,EAAUC,MAAAO,MAClB7B,EAAAyB,OAAOK,QAAQ,oBAAoBT,QAAeQ,MAAW,CAC3DF,SAAU,SAEZhB,QAAQC,IAAI,sBAAoBS,QAAeQ,UApDrD3B,EAAO6B,iBAAiB,UAWxB,SAAgBC,GACdA,EAAMC,iBAEN,IAAK,IAAIC,EAAI,EAAGA,EAAI3B,EAAQ2B,GAAK,EAE7B7B,EADE6B,EAAI,EACErB,OAAOR,GAEPQ,OAAOR,GAASQ,OAAOP,GAGjCE,EAAc0B,EAAG7B,MApBrBH,EAAO6B,iBAAiB,SAExB,WAKE,OAJA1B,EAAQH,EAAOiC,SAAS,GAAGC,MAC3B9B,EAAYJ,EAAOiC,SAAS,GAAGC,MAC/B7B,EAASL,EAAOiC,SAAS,GAAGC,MAErB,C,MAAE/B,E,UAAOC,E,OAAWC","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst formEl = document.querySelector('.form');\n\nlet delay = 0;\nlet delayStep = 0;\nlet amount = 0;\n\nformEl.addEventListener('submit', create);\nformEl.addEventListener('input', onFormInput);\n\nfunction onFormInput() {\n  delay = formEl.elements[0].value;\n  delayStep = formEl.elements[1].value;\n  amount = formEl.elements[2].value;\n\n  return { delay, delayStep, amount };\n}\n\nfunction create(event) {\n  event.preventDefault();\n\n  for (let i = 0; i < amount; i += 1) {\n    if (i < 1) {\n      delay = Number(delay);\n    } else {\n      delay = Number(delay) + Number(delayStep);\n    }\n\n    createPromise(i, delay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  position += 1;\n  console.log(position, Number(delay));\n\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n        fontSize: '14px',\n      });\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n        fontSize: '14px',\n      });\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position1","delay1","console","log","Number","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","delay2","Notify","success","fontSize","catch","delay3","failure","addEventListener","event","preventDefault","i","elements","value"],"version":3,"file":"03-promises.128e2a43.js.map"}